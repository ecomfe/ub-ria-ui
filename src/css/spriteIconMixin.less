.sprite-icon(none) {
    background: none;
}

.sprite-icon(@img) {
    @url: ~"@{img}";
    background: @url scroll 0 0 no-repeat transparent;
}

// 字体图标
@font-icon-family: FontAwesome;
.font-icon(@font-content, @size, @color) {
    font-family: @font-icon-family;
    font-size: @size;
    color: @color;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    content: "@{img}";
    // 重置indent，抵消外部可能的覆盖
    text-indent: 0;
}

// repeat背景
.repeat-x(@img, @bg-color:transparent) {
    background: @img scroll 0 0 repeat-x @bg-color;
}

// 一般元素型icon
.normal-icon (@img, @width:0, @height:0) {
    .sprite-icon(@img);
    width: @width;
    height: @height;
}

.pseudo-icon() {
    &:after {
        .sprite-icon(none);
    }
}

.pseudo-icon (@img, @width:0, @height:0, @horizontal:left, @hDuration:0, @vertical:center, @vDuration:0, @relativePos:relative) {
    .relative(@relativePos) when not (@relativePos = none) {
        position: @relativePos;
    }
    .relative(@relativePos);
    &:after {
        position: absolute;
        // 判断是否是字体图标，第二个参数是多态参数
        @is-font-icon: ~`/^#[A-Za-z0-9]+$/i.test("@{width}") ? 'true' : 'false'`;

        .icon(@img) when (@is-font-icon) {
            @size: @height;
            @color: @width;
            .font-icon(@img, @size, @color);
        }
        .icon(@img) when not (@is-font-icon) {
            width: @width;
            height: @height;
            content: '~"@{img}"';
            white-space: nowrap;
            text-indent: -9999px;
            overflow: hidden;
            .sprite-icon(@img);
        }

        .icon(@img);

        .position-vertical(@vertical) when (@vertical = center) {
            top: 50%;
            margin-top: -(@height/2);
        }
        .position-vertical(@vertical) when not (@vertical = center) {
            @{vertical}: @vDuration;
        }

        .position-horizontal(@horizontal) when (@horizontal = center), (@is-font-icon = 'true') {
            left: 50%;
            margin-left: -(@height/2);
        }

        .position-horizontal(@horizontal) when (@horizontal = center), (@is-font-icon = 'false') {
            left: 50%;
            margin-left: -(@width/2);
        }

        .position-horizontal(@horizontal) when not (@horizontal = center) {
            @{horizontal}: @hDuration;
        }

        .position-vertical(@vertical);
        .position-horizontal(@horizontal);
    }
}

.font-icon-position (@horizontal:left, @hDuration:0, @vertical:center, @vDuration:0, @width:1em, @height:1em) {
    position: absolute;

    .position-vertical(@vertical) when (@vertical = center) {
        top: 50%;
        margin-top: -(@height/2);
    }
    .position-vertical(@vertical) when not (@vertical = center) {
        @{vertical}: @vDuration;
    }

    .position-horizontal(@horizontal) when (@horizontal = center) {
        left: 50%;
        margin-left: -(@height/2);
    }

    .position-horizontal(@horizontal) when (@horizontal = center) {
        left: 50%;
        margin-left: -(@width/2);
    }

    .position-horizontal(@horizontal) when not (@horizontal = center) {
        @{horizontal}: @hDuration;
    }

    .position-vertical(@vertical);
    .position-horizontal(@horizontal);
}
